// <auto-generated />
using GestionCV.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GestionCV.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GestionCV.Models.Curriculum", b =>
                {
                    b.Property<int>("CurriculumId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("UtilisateurId");

                    b.HasKey("CurriculumId");

                    b.HasIndex("Nom")
                        .IsUnique();

                    b.HasIndex("UtilisateurId");

                    b.ToTable("Curriculum");
                });

            modelBuilder.Entity("GestionCV.Models.ExperienceProfessionnelle", b =>
                {
                    b.Property<int>("ExperienceProfessionnelleId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Activites")
                        .IsRequired()
                        .HasMaxLength(1000);

                    b.Property<int>("AnneeDebut");

                    b.Property<int>("AnneeFin");

                    b.Property<int>("CurriculumId");

                    b.Property<string>("Entreprise")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("TitrePoste")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("ExperienceProfessionnelleId");

                    b.HasIndex("CurriculumId");

                    b.ToTable("ExperienceProfessionnelle");
                });

            modelBuilder.Entity("GestionCV.Models.Formation", b =>
                {
                    b.Property<int>("FormationId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnneeDebut");

                    b.Property<int>("AnneeFin");

                    b.Property<int>("CurriculumId");

                    b.Property<string>("Institution")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("NomCours")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("TypeCoursId");

                    b.HasKey("FormationId");

                    b.HasIndex("CurriculumId");

                    b.HasIndex("TypeCoursId");

                    b.ToTable("Formation");
                });

            modelBuilder.Entity("GestionCV.Models.InformationLogin", b =>
                {
                    b.Property<int>("InformationLoginId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdresseIp")
                        .IsRequired();

                    b.Property<string>("Date")
                        .IsRequired();

                    b.Property<string>("Hour")
                        .IsRequired();

                    b.Property<int>("UtilisateurId");

                    b.HasKey("InformationLoginId");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("InformationLogin");
                });

            modelBuilder.Entity("GestionCV.Models.Langue", b =>
                {
                    b.Property<int>("LangueId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CurriculumId");

                    b.Property<int>("Niveau");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("LangueId");

                    b.HasIndex("CurriculumId");

                    b.HasIndex("Nom")
                        .IsUnique();

                    b.ToTable("Langue");
                });

            modelBuilder.Entity("GestionCV.Models.Objectif", b =>
                {
                    b.Property<int>("ObjectifId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CurriculumId");

                    b.Property<int>("Description")
                        .HasMaxLength(1000);

                    b.HasKey("ObjectifId");

                    b.HasIndex("CurriculumId");

                    b.ToTable("Objectif");
                });

            modelBuilder.Entity("GestionCV.Models.TypeCours", b =>
                {
                    b.Property<int>("TypeCoursId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type")
                        .IsRequired();

                    b.HasKey("TypeCoursId");

                    b.HasIndex("Type")
                        .IsUnique();

                    b.ToTable("TypeCours");
                });

            modelBuilder.Entity("GestionCV.Models.Utilisateur", b =>
                {
                    b.Property<int>("UtilisateurId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Courriel")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("MotDePasse")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("UtilisateurId");

                    b.HasIndex("Courriel")
                        .IsUnique();

                    b.ToTable("Utilisateur");
                });

            modelBuilder.Entity("GestionCV.Models.Curriculum", b =>
                {
                    b.HasOne("GestionCV.Models.Utilisateur", "Utilisateur")
                        .WithMany("Curriculums")
                        .HasForeignKey("UtilisateurId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GestionCV.Models.ExperienceProfessionnelle", b =>
                {
                    b.HasOne("GestionCV.Models.Curriculum", "Curriculum")
                        .WithMany("ExperiencesProfessionnelles")
                        .HasForeignKey("CurriculumId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GestionCV.Models.Formation", b =>
                {
                    b.HasOne("GestionCV.Models.Curriculum", "Curriculum")
                        .WithMany("Formations")
                        .HasForeignKey("CurriculumId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GestionCV.Models.TypeCours", "TypeCours")
                        .WithMany("Formations")
                        .HasForeignKey("TypeCoursId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GestionCV.Models.InformationLogin", b =>
                {
                    b.HasOne("GestionCV.Models.Utilisateur", "Utilisateur")
                        .WithMany("InformationLogin")
                        .HasForeignKey("UtilisateurId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GestionCV.Models.Langue", b =>
                {
                    b.HasOne("GestionCV.Models.Curriculum", "Curriculum")
                        .WithMany("Langues")
                        .HasForeignKey("CurriculumId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GestionCV.Models.Objectif", b =>
                {
                    b.HasOne("GestionCV.Models.Curriculum", "Curriculum")
                        .WithMany("Objectifs")
                        .HasForeignKey("CurriculumId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
