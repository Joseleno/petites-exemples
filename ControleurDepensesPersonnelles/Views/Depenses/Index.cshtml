@model X.PagedList.IPagedList<ControleurDepensesPersonnelles.Models.Depense>
@using X.PagedList.Mvc.Core
@using X.PagedList.Mvc.Common


@{
    ViewData["Title"] = "Depénses";
}


<div class="tabble">
    <div class="container">
        <p class="btnNew">
            <a asp-action="Create" class="btn btn-outline-primary btn-sm">Nouvelle Depénse</a>
        </p>
        @if (TempData["Confirmation"] != null)
        {
            <h6 class="alert alert-success">@TempData["Confirmation"]</h6>
        }
        <div class="row justify-content-md-center">
            <div class="form-group row">
                <label class="col-sm-3 col-form-label"><strong>Mois</strong></label>
                <div class="col-sm-9">
                    <select class="form-control selectMois" asp-items="ViewBag.Mois"></select>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col">
                <partial name="_DepenseMois" />
            </div>
        </div>

        <table class="table">
            <thead>
                <tr>
                    <th>
                        Mois
                    </th>
                    <th>
                        Type Depense
                    </th>
                    <th>
                        Valeur
                    </th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Mois.Nom)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.TypeDepense.Nom)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Valeur)
                        </td>
                        <td>
                            <a asp-action="Edit" asp-route-id="@item.DepenseId" class="btn btn-outline-warning btn-sm">Edit</a> |
                            <a onclick="ShowModal(@item.DepenseId)" class="btn btn-outline-danger btn-sm">Suprimmer</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>


<div class="modal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Supprimer</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Voulez-vous supprimer <text class="nom"></text></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-primary btnSuprimmer">Oui</button>
                <button type="button" class="btn btn-outline-danger" data-dismiss="modal">Non</button>
            </div>
        </div>
    </div>
</div>

@Html.PagedListPager(Model, page => Url.Action("Index", "Depenses", new { page }), new PagedListRenderOptionsBase
{
    LiElementClasses = new string[] { "page-item" },
    PageClasses = new string[] {"page-link"}
})

@section Scripts{
    <script src="~/js/GraphiqueDepenseMois.js"></script>
    <script>

        ChargerDonnesGraphiqueDepenseMois();

        function ShowModal(id) {

            $(".modal").modal();

            $(".btnSuprimmer").on('click', function () {
                $.ajax({
                    url: "Depenses/Delete",
                    method: "POST",
                    data: { id: id },
                    success: function (data) {
                        $(".modal").modal('hide');
                        location.reload(true);
                    }
                });
            });
        }
    </script>
}